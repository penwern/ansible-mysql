---
name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run tests weekly on Sunday at 2 AM UTC
    - cron: '0 2 * * 0'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible-lint yamllint

      - name: Run yamllint
        run: yamllint .

      - name: Run ansible-lint
        run: ansible-lint

  molecule:
    name: Molecule Test
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        distro:
          - ubuntu2404
        ansible-version:
          - "6"
          - "7"
          - "8"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "ansible-core>=2.${{ matrix.ansible-version }},<2.${{ matrix.ansible-version == '6' && '7' || matrix.ansible-version == '7' && '8' || '9' }}"
          pip install molecule[docker] pytest pytest-ansible pymysql cryptography

      - name: Run Molecule tests
        run: molecule test
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install safety bandit[toml] ansible-core

      - name: Run safety check
        run: safety check

      - name: Run bandit security linter
        run: bandit -r . -f json

      - name: Check for hardcoded secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD

  role-validation:
    name: Role Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible-core

      - name: Validate role structure
        run: |
          # Check required directories exist
          test -d tasks || (echo "ERROR: tasks/ directory missing" && exit 1)
          test -d defaults || (echo "ERROR: defaults/ directory missing" && exit 1)
          test -d handlers || (echo "ERROR: handlers/ directory missing" && exit 1)
          test -d meta || (echo "ERROR: meta/ directory missing" && exit 1)
          test -f README.md || (echo "ERROR: README.md missing" && exit 1)

          # Check main task file exists
          test -f tasks/main.yml || (echo "ERROR: tasks/main.yml missing" && exit 1)

          # Check meta file is valid
          test -f meta/main.yml || (echo "ERROR: meta/main.yml missing" && exit 1)

          echo "Role structure validation passed"

      - name: Syntax check
        run: |
          ansible-playbook --syntax-check tests/test.yml

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [lint, molecule, security, role-validation]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install sphinx sphinx-rtd-theme

      - name: Generate documentation
        run: |
          mkdir -p docs
          echo "# MySQL Role Documentation" > docs/index.md
          echo "" >> docs/index.md
          cat README.md >> docs/index.md

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
