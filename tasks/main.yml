# SPDX-License-Identifier: MIT-0
---
# tasks file for ansible-mysql

- name: Include OS-specific variables
  ansible.builtin.include_vars: "{{ ansible_os_family }}.yml"
  tags: mysql

- name: Validate required variables
  ansible.builtin.assert:
    that:
      - mysql_root_password is defined
      - mysql_root_password | length > 0
    fail_msg: "mysql_root_password must be set and not empty"
    success_msg: "Required variables validated"
  tags: mysql

- name: Gather package facts
  ansible.builtin.package_facts:
    manager: auto
  tags: mysql

- name: Detect MySQL version from installed packages
  ansible.builtin.set_fact:
    mysql_version: >-
      {{ ansible_facts.packages['mysql-server'][0].version.split('-')[0]
         if 'mysql-server' in ansible_facts.packages else '8.0' }}
  tags: mysql

- name: MySQL pre-installation tasks
  ansible.builtin.include_tasks: pre_install.yml
  tags:
    - mysql
    - mysql_install

- name: MySQL installation
  ansible.builtin.include_tasks: install.yml
  tags:
    - mysql
    - mysql_install

- name: Update MySQL version fact after installation
  ansible.builtin.set_fact:
    mysql_version: "{{ mysql_installed_version | default('8.0') }}"
  when: mysql_installed_version is defined
  tags: mysql

- name: MySQL post-installation configuration
  ansible.builtin.include_tasks: post_install.yml
  tags:
    - mysql
    - mysql_config

- name: Check if MySQL secure installation marker exists
  ansible.builtin.stat:
    path: "{{ mysql_secure_installation_marker }}"
  register: installation_marker_stat
  tags:
    - mysql
    - mysql_secure

- name: MySQL secure installation
  ansible.builtin.include_tasks: mysql_secure_installation.yml
  when: not installation_marker_stat.stat.exists
  tags:
    - mysql
    - mysql_secure

- name: Create marker file for MySQL secure installation
  ansible.builtin.file:
    path: "{{ mysql_secure_installation_marker }}"
    state: touch
    mode: "0644"
  when: not installation_marker_stat.stat.exists
  tags:
    - mysql
    - mysql_secure

- name: Configure MySQL
  ansible.builtin.include_tasks: configure.yml
  tags:
    - mysql
    - mysql_config

- name: MySQL user management
  ansible.builtin.include_tasks: users.yml
  when: mysql_users is defined and mysql_users | length > 0
  tags:
    - mysql
    - mysql_users

- name: MySQL database management
  ansible.builtin.include_tasks: databases.yml
  when: mysql_databases is defined and mysql_databases | length > 0
  tags:
    - mysql
    - mysql_databases

- name: Ensure MySQL is started and enabled
  ansible.builtin.systemd:
    name: "{{ mysql_service_name }}"
    state: started
    enabled: true
  tags: mysql
